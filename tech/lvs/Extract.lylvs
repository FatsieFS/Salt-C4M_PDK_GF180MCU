<?xml version='1.0' encoding='utf-8'?>
<klayout-macro><description /><version /><category>lvs</category><prolog /><epilog /><doc /><autorun>false</autorun><autorun-early>false</autorun-early><shortcut /><show-in-menu>true</show-in-menu><group-name>lvs_scripts</group-name><menu-path>tools_menu.lvs.end</menu-path><interpreter>dsl</interpreter><dsl-interpreter-name>lvs-dsl-xml</dsl-interpreter-name><text># Autogenerated file. Changes will be overwritten

report_netlist

flat

# Define layers
Nwell = input(21, 0)
Nplus = input(32, 0)
Pplus = input(31, 0)
Dualgate = input(55, 0)
Poly2 = input(30, 0)
COMP = input(22, 0)
Metal1_Label = input(34, 10)
Metal1 = input(34, 0)
Metal2_Label = input(36, 10)
Metal2 = input(36, 0)
Metal3_Label = input(42, 10)
Metal3 = input(42, 0)
Metal4_Label = input(46, 10)
Metal4 = input(46, 0)
Metal5_Label = input(81, 10)
Metal5 = input(81, 0)
MetalTop_Label = input(53, 10)
MetalTop = input(53, 0)
Contact = input(33, 0)
Via1 = input(35, 0)
Via2 = input(38, 0)
Via3 = input(40, 0)
Via4 = input(41, 0)
Via5 = input(82, 0)
V5_XTOR = input(112, 1)

# Derived layers
# wafer.alias(_wafer)
_wafer = extent.sized(0.43)
# _wafer.remove(Nwell).alias(substrate:GF180MCU)
substrate__GF180MCU = (_wafer-Nwell)
# COMP.remove(Poly2).alias(COMP__conn)
COMP__conn = (COMP-Poly2)
# intersect(COMP__conn,Nplus).alias(COMP__conn:Nplus)
COMP__conn__Nplus = (COMP__conn&amp;Nplus)
# intersect(COMP__conn,Pplus).alias(COMP__conn:Pplus)
COMP__conn__Pplus = (COMP__conn&amp;Pplus)
# intersect(COMP,Poly2,_wafer.remove(Dualgate)).alias(gate:fet33gate)
gate__fet33gate = (COMP&amp;Poly2&amp;(_wafer-Dualgate))
# intersect(COMP,Poly2,Dualgate,V5_XTOR).alias(gate:fet5gate)
gate__fet5gate = (COMP&amp;Poly2&amp;Dualgate&amp;V5_XTOR)
# intersect(gate:fet33gate,Nplus).remove(Nwell).alias(gate:mosfet:nfet_03v3)
gate__mosfet__nfet_03v3 = ((gate__fet33gate&amp;Nplus)-Nwell)
# intersect(gate:fet5gate,Nplus).remove(Nwell).alias(gate:mosfet:nfet_05v0)
gate__mosfet__nfet_05v0 = ((gate__fet5gate&amp;Nplus)-Nwell)
# intersect(gate:fet33gate,Pplus,Nwell).alias(gate:mosfet:pfet_03v3)
gate__mosfet__pfet_03v3 = (gate__fet33gate&amp;Pplus&amp;Nwell)
# intersect(gate:fet5gate,Pplus,Nwell).alias(gate:mosfet:pfet_05v0)
gate__mosfet__pfet_05v0 = (gate__fet5gate&amp;Pplus&amp;Nwell)

# Connectivity
# connect(substrate:GF180MCU,_wafer)
connect(substrate__GF180MCU, _wafer)
# connect(COMP__conn,COMP__conn:Nplus)
connect(COMP__conn, COMP__conn__Nplus)
# connect(COMP__conn:Nplus,Nwell)
connect(COMP__conn__Nplus, Nwell)
# connect(COMP__conn,COMP__conn:Pplus)
connect(COMP__conn, COMP__conn__Pplus)
# connect(COMP__conn:Pplus,substrate:GF180MCU)
connect(COMP__conn__Pplus, substrate__GF180MCU)
# connect(Metal1,Metal1_Label)
connect(Metal1, Metal1_Label)
# connect(Metal2,Metal2_Label)
connect(Metal2, Metal2_Label)
# connect(Metal3,Metal3_Label)
connect(Metal3, Metal3_Label)
# connect(Metal4,Metal4_Label)
connect(Metal4, Metal4_Label)
# connect(Metal5,Metal5_Label)
connect(Metal5, Metal5_Label)
# connect(MetalTop,MetalTop_Label)
connect(MetalTop, MetalTop_Label)
# connect((COMP__conn,Poly2),Contact)
connect(COMP__conn, Contact)
connect(Poly2, Contact)
# connect(Contact,Metal1)
connect(Contact, Metal1)
# connect(Metal1,Via1)
connect(Metal1, Via1)
# connect(Via1,Metal2)
connect(Via1, Metal2)
# connect(Metal2,Via2)
connect(Metal2, Via2)
# connect(Via2,Metal3)
connect(Via2, Metal3)
# connect(Metal3,Via3)
connect(Metal3, Via3)
# connect(Via3,Metal4)
connect(Via3, Metal4)
# connect(Metal4,Via4)
connect(Metal4, Via4)
# connect(Via4,Metal5)
connect(Via4, Metal5)
# connect(Metal5,Via5)
connect(Metal5, Via5)
# connect(Via5,MetalTop)
connect(Via5, MetalTop)

# Resistors

# Diodes

# Transistors
# nfet_03v3
extract_devices(mos4("nfet_03v3"), {
    "SD" =&gt; COMP__conn, "G" =&gt; gate__mosfet__nfet_03v3, "tG" =&gt; Poly2, "W" =&gt; substrate__GF180MCU,
})
# nfet_05v0
extract_devices(mos4("nfet_06v0"), {
    "SD" =&gt; COMP__conn, "G" =&gt; gate__mosfet__nfet_05v0, "tG" =&gt; Poly2, "W" =&gt; substrate__GF180MCU,
})
# pfet_03v3
extract_devices(mos4("pfet_03v3"), {
    "SD" =&gt; COMP__conn, "G" =&gt; gate__mosfet__pfet_03v3, "tG" =&gt; Poly2, "W" =&gt; Nwell,
})
# pfet_05v0
extract_devices(mos4("pfet_06v0"), {
    "SD" =&gt; COMP__conn, "G" =&gt; gate__mosfet__pfet_05v0, "tG" =&gt; Poly2, "W" =&gt; Nwell,
})

netlist
</text></klayout-macro>